# Add leading zero
homevalue_data$`Census Tract` <- ifelse(str_length(homevalue_data$`Census Tract`) == 5, paste0("0", homevalue_data$`Census Tract`), homevalue_data$`Census Tract`)
# Add state and county digits
homevalue_data$`Census Tract` <- as.numeric(paste0("17031", homevalue_data$`Census Tract`))
# Check for null values
sum(is.na(homevalue_data))
# Age Data
age_data <- read_csv("C:/Users/jackt/Documents/GitHub/ChicagoLand/Data/ACS and Census Data/ACSST5Y2021.S0101-2023-05-11T225911.csv")
# Get data in tidy format
age_data <- pivot_longer(age_data, cols = c(2:length(age_data)), names_to = "Census Tract")
age_data <- pivot_wider(age_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out percentages
age_data <- filter(age_data, str_detect(age_data$`Census Tract`, "Total"))
# Filter out extra text in census tract
age_data$`Census Tract` <- str_remove_all(age_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
age_data$`Census Tract` <- ifelse(str_detect(age_data$`Census Tract`, "\\."), str_remove(age_data$`Census Tract`, "\\."), paste0(age_data$`Census Tract`, "00"))
# Add leading zero
age_data$`Census Tract` <- ifelse(str_length(age_data$`Census Tract`) == 5, paste0("0", age_data$`Census Tract`), age_data$`Census Tract`)
# Add state and county digits
age_data$`Census Tract` <- as.numeric(paste0("17031", age_data$`Census Tract`))
# Check for null values
sum(is.na(age_data))
# Income Data
income_data <- read_csv("C:/Users/jackt/Documents/GitHub/ChicagoLand/Data/ACS and Census Data/ACSST5Y2021.S1903-2023-05-11T192004.csv")
# Get data in tidy format
income_data <- pivot_longer(income_data, cols = c(2:length(income_data)), names_to = "Census Tract")
income_data <- pivot_wider(income_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out percent incomes
income_data <- filter(income_data, str_detect(income_data$`Census Tract`, "Median"))
# Filter out extra text in census tract
income_data$`Census Tract` <- str_remove_all(income_data$`Census Tract`, "[:alpha:]| |,|\\!")
income_data$`Census Tract` <- str_sub(income_data$`Census Tract`, start = 1, end = -3)
# If no decimal place append two zeros
income_data$`Census Tract` <- ifelse(str_detect(income_data$`Census Tract`, "\\."), str_remove(income_data$`Census Tract`, "\\."), paste0(income_data$`Census Tract`, "00"))
# Add leading zero
income_data$`Census Tract` <- ifelse(str_length(income_data$`Census Tract`) == 5, paste0("0", income_data$`Census Tract`), income_data$`Census Tract`)
# Add state and county digits
income_data$`Census Tract` <- as.numeric(paste0("17031", income_data$`Census Tract`))
# Check for null values
sum(is.na(income_data))
# Race Data
race_data <- read_csv("C:/Users/jackt/Documents/GitHub/ChicagoLand/Data/ACS and Census Data/DECENNIALPL2020.P1-2023-05-11T190224.csv")
# Get data in tidy format
race_data <- pivot_longer(race_data, cols = c(2:length(race_data)), names_to = "Census Tract")
race_data <- pivot_wider(race_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out extra text in census tract
race_data$`Census Tract` <- str_remove_all(race_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
race_data$`Census Tract` <- ifelse(str_detect(race_data$`Census Tract`, "\\."), str_remove(race_data$`Census Tract`, "\\."), paste0(race_data$`Census Tract`, "00"))
# Add leading zero
race_data$`Census Tract` <- ifelse(str_length(race_data$`Census Tract`) == 5, paste0("0", race_data$`Census Tract`), race_data$`Census Tract`)
# Add state and county digits
race_data$`Census Tract` <- as.numeric(paste0("17031", race_data$`Census Tract`))
# Check for null values
sum(is.na(race_data))
# Taxi Trip Data
taxi_data <- read_csv("C:/Users/jackt/Documents/GitHub/ChicagoLand/Data/annual_tract_taxi_trips.csv")
# Rename columns
colnames(taxi_data) <- c("year", "Census Tract", "taxi_trips")
# Take only 2021 data
taxi_data <- taxi_data %>%
filter(year == 2021)
acs_data <- age_data %>%
inner_join(commute_data, by = join_by(`Census Tract`)) %>%
inner_join(homevalue_data, by = join_by(`Census Tract`)) %>%
inner_join(income_data, by = join_by(`Census Tract`)) %>%
inner_join(mrent_data, by = join_by(`Census Tract`)) %>%
inner_join(race_data, by = join_by(`Census Tract`)) %>%
inner_join(rent_data, by = join_by(`Census Tract`)) %>%
inner_join(transport_data, by = join_by(`Census Tract`)) %>%
left_join(taxi_data, by = join_by(`Census Tract`))
library(tidyverse)
acs_data <- age_data %>%
inner_join(commute_data, by = `Census Tract`) %>%
inner_join(homevalue_data, by = `Census Tract`) %>%
inner_join(income_data, by = `Census Tract`) %>%
inner_join(mrent_data, by = `Census Tract`) %>%
inner_join(race_data, by = `Census Tract`) %>%
inner_join(rent_data, by = `Census Tract`) %>%
inner_join(transport_data, by = `Census Tract`) %>%
left_join(taxi_data, by = `Census Tract`)
View(mrent_data)
acs_data <- age_data %>%
inner_join(commute_data, by = "Census Tract") %>%
inner_join(homevalue_data, by = "Census Tract") %>%
inner_join(income_data, by = "Census Tract") %>%
inner_join(mrent_data, by = "Census Tract") %>%
inner_join(race_data, by = "Census Tract") %>%
inner_join(rent_data, by = "Census Tract") %>%
inner_join(transport_data, by = "Census Tract") %>%
left_join(taxi_data, by = "Census Tract")
acs_data$year <- 2021
acs_data$taxi_trips <- ifelse(is.na(acs_data$taxi_trips), 0, acs_data$taxi_trips)
View(acs_data)
# Illinois Census Tract Data
geo_data <- read_sf("C:/Users/jackt/Downloads/tl_2020_17_tract.shp")
cd
# Illinois Census Tract Data
geo_data <- read_sf("\Data\Tract Data\tl_2018_17_tract.shp")
# Illinois Census Tract Data
geo_data <- read_sf("/Data/Tract Data/tl_2018_17_tract.shp")
# Illinois Census Tract Data
geo_data <- read_sf(".../Data/Tract Data/tl_2018_17_tract.shp")
# Illinois Census Tract Data
geo_data <- read_sf("../Data/Tract Data/tl_2018_17_tract.shp")
setwd("~/GitHub/ChicagoLand")
# Illinois Census Tract Data
geo_data <- read_sf(".../Data/Tract Data/tl_2018_17_tract.shp")
# Illinois Census Tract Data
geo_data <- read_sf("~/Data/Tract Data/tl_2018_17_tract.shp")
# Taxi Trip Data
taxi_data <- read_csv("~/Data/annual_tract_taxi_trips.csv")
# Taxi Trip Data
taxi_data <- read_csv("./Data/annual_tract_taxi_trips.csv")
# Metro Station Data
metro_data <- read_sf(".Data/Metra_Stations/MetraStations.shp")
# Metro Station Data
metro_data <- read_sf("./Data/Metra_Stations/MetraStations.shp")
metro_data <- st_cast(metro_data, "POINT")
metro_data <- st_transform(metro_data, crs = 4269)
# Bus Stop Data
bus_data <- read_sf("./Data/CTA_BusStops/CTA_BusStops.shp")
bus_data <- st_transform(bus_data, crs = 4269)
# Illinois Census Tract Data
geo_data <- read_sf("./Data/Tract Data/tl_2018_17_tract.shp")
geo_data <- subset(geo_data, select = c("GEOID", "geometry"))
geo_data$GEOID <- as.double(geo_data$GEOID)
acs_data <- left_join(acs_data, geo_data, by = c("Census Tract" = "GEOID"))
# Metro Station Data
metro_data <- read_sf("./Data/Metra_Stations/MetraStations.shp")
metro_data <- st_cast(metro_data, "POINT")
metro_data <- st_transform(metro_data, crs = 4269)
# Bus Stop Data
bus_data <- read_sf("./Data/CTA_BusStops/CTA_BusStops.shp")
bus_data <- st_transform(bus_data, crs = 4269)
acs_data <- age_data %>%
inner_join(commute_data, by = "Census Tract") %>%
inner_join(homevalue_data, by = "Census Tract") %>%
inner_join(income_data, by = "Census Tract") %>%
inner_join(mrent_data, by = "Census Tract") %>%
inner_join(race_data, by = "Census Tract") %>%
inner_join(rent_data, by = "Census Tract") %>%
inner_join(transport_data, by = "Census Tract") %>%
left_join(taxi_data, by = "Census Tract")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(psych)
library(corrplot)
library(sf)
library(maps)
library(extrafont)
library(plotly)
library(scales)
library(leaflet)
library(leaflet.providers)
library(ragg)
# Method of Transport Data
transport_data <- read_csv("./Data/ACS and Census Data/ACSDT5Y2021.B08301-2023-05-11T185152.csv")
# Get data in tidy format
transport_data <- pivot_longer(transport_data, cols = c(2:length(transport_data)), names_to = "Census Tract")
transport_data <- pivot_wider(transport_data, names_from = `Label (Grouping)`, values_from = value)
# Rename columns
colnames(transport_data) <- c("Census Tract", "Automobile Total", "Drove Alone", "Carpooled", "Public Transit Total", "Bus", "Metro", "Long-Distance Train", "Light Rail", "Ferryboat", "Taxicab", "Motorcycle", "Bicycle", "Walking", "Other", "Worked From Home")
# Filter out extra text in census tract
transport_data$`Census Tract` <- str_remove_all(transport_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
transport_data$`Census Tract` <- ifelse(str_detect(transport_data$`Census Tract`, "\\."), str_remove(transport_data$`Census Tract`, "\\."), paste0(transport_data$`Census Tract`, "00"))
# Add leading zero
transport_data$`Census Tract` <- ifelse(str_length(transport_data$`Census Tract`) == 5, paste0("0", transport_data$`Census Tract`), transport_data$`Census Tract`)
# Add state and county digits
transport_data$`Census Tract` <- as.numeric(paste0("17031", transport_data$`Census Tract`))
# Check for null values
sum(is.na(transport_data))
# Commute Times Data
commute_data <- read_csv("./Data/ACS and Census Data/ACSDT5Y2021.B08303-2023-05-11T185220.csv")
# Get data in tidy format
commute_data <- pivot_longer(commute_data, cols = c(2:length(commute_data)), names_to = "Census Tract")
commute_data <- pivot_wider(commute_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out extra text in census tract
commute_data$`Census Tract` <- str_remove_all(commute_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
commute_data$`Census Tract` <- ifelse(str_detect(commute_data$`Census Tract`, "\\."), str_remove(commute_data$`Census Tract`, "\\."), paste0(commute_data$`Census Tract`, "00"))
# Add leading zero
commute_data$`Census Tract` <- ifelse(str_length(commute_data$`Census Tract`) == 5, paste0("0", commute_data$`Census Tract`), commute_data$`Census Tract`)
# Add state and county digits
commute_data$`Census Tract` <- as.numeric(paste0("17031", commute_data$`Census Tract`))
# Check for null values
sum(is.na(commute_data))
# Gross Rent Data
rent_data <- read_csv("./Data/ACS and Census Data/ACSDT5Y2021.B25031-2023-05-11T225456.csv")
# Get data in tidy format
rent_data <- pivot_longer(rent_data, cols = c(2:length(rent_data)), names_to = "Census Tract")
rent_data <- pivot_wider(rent_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out extra text in census tract
rent_data$`Census Tract` <- str_remove_all(rent_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
rent_data$`Census Tract` <- ifelse(str_detect(rent_data$`Census Tract`, "\\."), str_remove(rent_data$`Census Tract`, "\\."), paste0(rent_data$`Census Tract`, "00"))
# Add leading zero
rent_data$`Census Tract` <- ifelse(str_length(rent_data$`Census Tract`) == 5, paste0("0", rent_data$`Census Tract`), rent_data$`Census Tract`)
# Add state and county digits
rent_data$`Census Tract` <- as.numeric(paste0("17031", rent_data$`Census Tract`))
# Replace dashes with zero
for (idx in c(2:8)) {
rent_data[[idx]] <- ifelse(rent_data[[idx]] == "-", 0, as.numeric(str_remove_all(rent_data[[idx]], ",|\\+")))
}
# Check for null values
sum(is.na(rent_data))
# Median Rent Data
mrent_data <- read_csv("./Data/ACS and Census Data/ACSDT5Y2021.B25058-2023-05-11T225537.csv")
# Replace dashes with zero
for (idx in c(1:length(mrent_data))) {
if (mrent_data[idx] == "-") {
mrent_data[idx] <- 0
}
}
# Get data in tidy format
mrent_data <- pivot_longer(mrent_data, cols = c(2:length(mrent_data)), names_to = "Census Tract")
mrent_data <- pivot_wider(mrent_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out extra text in census tract
mrent_data$`Census Tract` <- str_remove_all(mrent_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
mrent_data$`Census Tract` <- ifelse(str_detect(mrent_data$`Census Tract`, "\\."), str_remove(mrent_data$`Census Tract`, "\\."), paste0(mrent_data$`Census Tract`, "00"))
# Add leading zero
mrent_data$`Census Tract` <- ifelse(str_length(mrent_data$`Census Tract`) == 5, paste0("0", mrent_data$`Census Tract`), mrent_data$`Census Tract`)
# Add state and county digits
mrent_data$`Census Tract` <- as.numeric(paste0("17031", mrent_data$`Census Tract`))
# Check for null values
sum(is.na(mrent_data))
# Median Home Value Data
homevalue_data <- read_csv("./Data/ACS and Census Data/ACSDT5Y2021.B25077-2023-05-11T184111.csv")
# Replace dashes with zero
for (idx in c(1:length(homevalue_data))) {
if (homevalue_data[idx] == "-") {
homevalue_data[idx] <- 0
}
}
# Get data in tidy format
homevalue_data <- pivot_longer(homevalue_data, cols = c(2:length(homevalue_data)), names_to = "Census Tract")
homevalue_data <- pivot_wider(homevalue_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out extra text in census tract
homevalue_data$`Census Tract` <- str_remove_all(homevalue_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
homevalue_data$`Census Tract` <- ifelse(str_detect(homevalue_data$`Census Tract`, "\\."), str_remove(homevalue_data$`Census Tract`, "\\."), paste0(homevalue_data$`Census Tract`, "00"))
# Add leading zero
homevalue_data$`Census Tract` <- ifelse(str_length(homevalue_data$`Census Tract`) == 5, paste0("0", homevalue_data$`Census Tract`), homevalue_data$`Census Tract`)
# Add state and county digits
homevalue_data$`Census Tract` <- as.numeric(paste0("17031", homevalue_data$`Census Tract`))
# Check for null values
sum(is.na(homevalue_data))
# Age Data
age_data <- read_csv("./Data/ACS and Census Data/ACSST5Y2021.S0101-2023-05-11T225911.csv")
# Get data in tidy format
age_data <- pivot_longer(age_data, cols = c(2:length(age_data)), names_to = "Census Tract")
age_data <- pivot_wider(age_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out percentages
age_data <- filter(age_data, str_detect(age_data$`Census Tract`, "Total"))
# Filter out extra text in census tract
age_data$`Census Tract` <- str_remove_all(age_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
age_data$`Census Tract` <- ifelse(str_detect(age_data$`Census Tract`, "\\."), str_remove(age_data$`Census Tract`, "\\."), paste0(age_data$`Census Tract`, "00"))
# Add leading zero
age_data$`Census Tract` <- ifelse(str_length(age_data$`Census Tract`) == 5, paste0("0", age_data$`Census Tract`), age_data$`Census Tract`)
# Add state and county digits
age_data$`Census Tract` <- as.numeric(paste0("17031", age_data$`Census Tract`))
# Check for null values
sum(is.na(age_data))
# Income Data
income_data <- read_csv("./Data/ACS and Census Data/ACSST5Y2021.S1903-2023-05-11T192004.csv")
# Get data in tidy format
income_data <- pivot_longer(income_data, cols = c(2:length(income_data)), names_to = "Census Tract")
income_data <- pivot_wider(income_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out percent incomes
income_data <- filter(income_data, str_detect(income_data$`Census Tract`, "Median"))
# Filter out extra text in census tract
income_data$`Census Tract` <- str_remove_all(income_data$`Census Tract`, "[:alpha:]| |,|\\!")
income_data$`Census Tract` <- str_sub(income_data$`Census Tract`, start = 1, end = -3)
# If no decimal place append two zeros
income_data$`Census Tract` <- ifelse(str_detect(income_data$`Census Tract`, "\\."), str_remove(income_data$`Census Tract`, "\\."), paste0(income_data$`Census Tract`, "00"))
# Add leading zero
income_data$`Census Tract` <- ifelse(str_length(income_data$`Census Tract`) == 5, paste0("0", income_data$`Census Tract`), income_data$`Census Tract`)
# Add state and county digits
income_data$`Census Tract` <- as.numeric(paste0("17031", income_data$`Census Tract`))
# Check for null values
sum(is.na(income_data))
# Race Data
race_data <- read_csv("./Data/ACS and Census Data/DECENNIALPL2020.P1-2023-05-11T190224.csv")
# Get data in tidy format
race_data <- pivot_longer(race_data, cols = c(2:length(race_data)), names_to = "Census Tract")
race_data <- pivot_wider(race_data, names_from = `Label (Grouping)`, values_from = value)
# Filter out extra text in census tract
race_data$`Census Tract` <- str_remove_all(race_data$`Census Tract`, "[:alpha:]| |,|\\!")
# If no decimal place append two zeros
race_data$`Census Tract` <- ifelse(str_detect(race_data$`Census Tract`, "\\."), str_remove(race_data$`Census Tract`, "\\."), paste0(race_data$`Census Tract`, "00"))
# Add leading zero
race_data$`Census Tract` <- ifelse(str_length(race_data$`Census Tract`) == 5, paste0("0", race_data$`Census Tract`), race_data$`Census Tract`)
# Add state and county digits
race_data$`Census Tract` <- as.numeric(paste0("17031", race_data$`Census Tract`))
# Check for null values
sum(is.na(race_data))
# Taxi Trip Data
taxi_data <- read_csv("./Data/annual_tract_taxi_trips.csv")
# Rename columns
colnames(taxi_data) <- c("year", "Census Tract", "taxi_trips")
# Take only 2021 data
taxi_data <- taxi_data %>%
filter(year == 2021)
acs_data <- age_data %>%
inner_join(commute_data, by = "Census Tract") %>%
inner_join(homevalue_data, by = "Census Tract") %>%
inner_join(income_data, by = "Census Tract") %>%
inner_join(mrent_data, by = "Census Tract") %>%
inner_join(race_data, by = "Census Tract") %>%
inner_join(rent_data, by = "Census Tract") %>%
inner_join(transport_data, by = "Census Tract") %>%
left_join(taxi_data, by = "Census Tract")
acs_data$year <- 2021
acs_data$taxi_trips <- ifelse(is.na(acs_data$taxi_trips), 0, acs_data$taxi_trips)
# Illinois Census Tract Data
geo_data <- read_sf("./Data/Tract Data/tl_2018_17_tract.shp")
geo_data <- subset(geo_data, select = c("GEOID", "geometry"))
geo_data$GEOID <- as.double(geo_data$GEOID)
acs_data <- left_join(acs_data, geo_data, by = c("Census Tract" = "GEOID"))
# Metro Station Data
metro_data <- read_sf("./Data/Metra_Stations/MetraStations.shp")
metro_data <- st_cast(metro_data, "POINT")
metro_data <- st_transform(metro_data, crs = 4269)
# Bus Stop Data
bus_data <- read_sf("./Data/CTA_BusStops/CTA_BusStops.shp")
bus_data <- st_transform(bus_data, crs = 4269)
map.theme <- theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
panel.background=element_blank(), panel.border=element_blank(),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
plot.background=element_blank())
us_map <- st_as_sf(map("usa", plot = FALSE, fill = TRUE))
rent_plot <- ggplot(data = acs_data) +
geom_sf(data = us_map, fill = "gray15", color = "black") +
geom_sf(data = geo_data, aes(geometry = geometry), fill = NA, color = "gray8") +
geom_sf(mapping = aes(fill = `Median contract rent`, geometry = geometry,
text = paste("Tract #:", `Census Tract`)), color = "gray8") +
scale_fill_gradient(low = "#152236", high = "chartreuse", label = dollar_format()) +
coord_sf(xlim = c(-88.3, -87.5), ylim = c(41.4, 42.2)) +
theme_dark() + map.theme +
theme(plot.background = element_rect(fill = "gray8"),
panel.background = element_rect(fill = "#152236"),
legend.background = element_rect(fill = "gray8"),
legend.key.height = unit(1.5, "cm"),
text = element_text(color="#fff0d5", size=16),
plot.title = element_text(size=30),
strip.text = element_text(color="#fff0d5", size=16),
plot.margin = margin(25, 25, 25, 25))
rent_plot
ggplotly(rent_plot)
rent_plot <- ggplot(data = acs_data) +
geom_sf(data = us_map, fill = "gray15", color = "black") +
geom_sf(data = geo_data, aes(geometry = geometry), fill = NA, color = "gray8") +
geom_sf(mapping = aes(fill = `Median contract rent`, geometry = geometry,
text = paste("Tract #:", `Census Tract`)), color = "gray8") +
scale_fill_gradient(low = "#152236", high = "chartreuse", label = dollar_format()) +
coord_sf(xlim = c(-88.3, -87.5), ylim = c(41.4, 42.2)) +
theme_dark() + map.theme +
theme(plot.background = element_rect(fill = "gray8"),
panel.background = element_rect(fill = "#152236"),
legend.background = element_rect(fill = "gray8"),
legend.key.height = unit(1.5, "cm"),
text = element_text(color="#fff0d5", size=16),
plot.title = element_text(size=30),
strip.text = element_text(color="#fff0d5", size=16),
plot.margin = margin(25, 25, 25, 25))
rent_plot
ggplotly(rent_plot)
# Data Set Up
rent_qu_data <- acs_data %>%
select(c("Census Tract", "Median contract rent", "Median Gross Rent":"5 or more bedrooms", "geometry")) %>%
pivot_longer(cols=c("Median contract rent", "Median Gross Rent":"5 or more bedrooms"), names_to = "rent_type") %>%
filter(`Census Tract` != 17031990000)
rent_qu_data$rent_type <- ifelse(rent_qu_data$rent_type == "Median Gross Rent", "Median gross rent", rent_qu_data$rent_type)
rent_qu_data <- st_as_sf(rent_qu_data, sf_column_name = "geometry")
# Palette and Label Setup
pal1 <- colorNumeric("PuRd", domain = c(1, 3500), na.color = "white")
labels1 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "Median contract rent",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "Median contract rent",]$value
) %>% lapply(htmltools::HTML)
labels2 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "Median gross rent",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "Median gross rent",]$value
) %>% lapply(htmltools::HTML)
labels3 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "No bedroom",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "No bedroom",]$value
) %>% lapply(htmltools::HTML)
labels4 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "1 bedroom",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "1 bedroom",]$value
) %>% lapply(htmltools::HTML)
labels5 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "2 bedrooms",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "2 bedrooms",]$value
) %>% lapply(htmltools::HTML)
labels6 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "3 bedrooms",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "3 bedrooms",]$value
) %>% lapply(htmltools::HTML)
labels7 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "4 bedrooms",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "4 bedrooms",]$value
) %>% lapply(htmltools::HTML)
labels8 <- sprintf("<strong>Tract %s</strong><br/>Median Rent: $%g",
rent_qu_data[rent_qu_data$rent_type == "5 or more bedrooms",]$`Census Tract`,
rent_qu_data[rent_qu_data$rent_type == "5 or more bedrooms",]$value
) %>% lapply(htmltools::HTML)
rent_inter_plot <- leaflet(data = rent_qu_data) %>%
setView(-87.9, 41.8, 10) %>%
addTiles() %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "Median contract rent",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "Median contract rent",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels1,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addLegend(pal = pal1, values = ~value, opacity = 0.7, title = "Median Rent (US$)",
position = "bottomright", group = "Median contract rent") %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "Median gross rent",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "Median gross rent",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels2,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "No bedroom",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "No bedroom",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels3,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "1 bedroom",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "1 bedroom",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels4,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "2 bedrooms",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "2 bedrooms",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels5,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "3 bedrooms",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "3 bedrooms",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels6,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "4 bedrooms",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "4 bedrooms",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels7,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addPolygons(data = rent_qu_data[rent_qu_data$rent_type == "5 or more bedrooms",],
fillColor = ~pal1(value), weight = 1, opacity = 0.8,
color = "white", fillOpacity = 0.7,
group = "5 or more bedrooms",
highlightOptions = highlightOptions(
weight = 4, color = "gray10", fillOpacity = 1, opacity = 1,
bringToFront = TRUE),
label = labels8,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px", direction = "auto")) %>%
addLayersControl(
baseGroups = unique(rent_qu_data$rent_type),
options = layersControlOptions(collapsed = FALSE)
)
rent_inter_plot
